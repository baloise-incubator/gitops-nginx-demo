apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: build-and-push
spec:
  resources:
    - name: repo
      type: git
    - name: image
      type: image

  tasks:
    - name: build
      taskRef:
        name: buildah-docker-format
        kind: ClusterTask
      resources:
        inputs:
          - name: source
            resource: repo
        outputs:
          - name: image
            resource: image
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: gitops-nginx-demo-pipeline
spec:
  serviceAccountName: harbor-sa
  pipelineRef:
    name: build-and-push
  resources:
    - name: repo
      resourceRef:
        name: demo-git-resource
    - name: image
      resourceRef:
        name: demo-image-resource
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: buildah-docker-format
spec:
  inputs:
    params:
      - name: BUILDER_IMAGE
        description: The location of the buildah builder image.
        default: quay.io/buildah/stable:v1.11.0
      - name: DOCKERFILE
        description: Path to the Dockerfile to build.
        default: ./Dockerfile
      - name: CONTEXT
        description: Path to the directory to use as context.
        default: .
      - name: TLSVERIFY
        description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
        default: "true"

    resources:
      - name: source
        type: git

  outputs:
    resources:
      - name: image
        type: image

  steps:
    - name: build
      image: $(inputs.params.BUILDER_IMAGE)
      workingDir: /workspace/source
      command: ['buildah', 'bud', '--format=docker', '--tls-verify=$(inputs.params.TLSVERIFY)', '--layers', '-f', '$(inputs.params.DOCKERFILE)', '-t', '$(outputs.resources.image.url)', '$(inputs.params.CONTEXT)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true

    - name: push
      image: $(inputs.params.BUILDER_IMAGE)
      workingDir: /workspace/source
      command: ['buildah', 'push', '--format=docker', '--tls-verify=$(inputs.params.TLSVERIFY)', '$(outputs.resources.image.url)', 'docker://$(outputs.resources.image.url)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true

  volumes:
    - name: varlibcontainers
      emptyDir: {}